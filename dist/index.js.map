{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/main/config.ts","webpack:///./src/main/const.ts","webpack:///./src/main/main.ts","webpack:///./src/main/readBBS/Read5ch.ts","webpack:///./src/main/readBBS/getRes.ts","webpack:///./src/main/readBBS/readSitaraba.ts","webpack:///./src/main/startServer.ts","webpack:///./src/main/util.ts","webpack:///external \"axios\"","webpack:///external \"electron\"","webpack:///external \"electron-json-storage\"","webpack:///external \"electron-log\"","webpack:///external \"electron-window-state\"","webpack:///external \"fs\"","webpack:///external \"iconv-lite\"","webpack:///external \"path\""],"names":[],"mappings":";QAAA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;;QAEA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;;;QAGA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA,0CAA0C,gCAAgC;QAC1E;QACA;;QAEA;QACA;QACA;QACA,wDAAwD,kBAAkB;QAC1E;QACA,iDAAiD,cAAc;QAC/D;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA,yCAAyC,iCAAiC;QAC1E,gHAAgH,mBAAmB,EAAE;QACrI;QACA;;QAEA;QACA;QACA;QACA,2BAA2B,0BAA0B,EAAE;QACvD,iCAAiC,eAAe;QAChD;QACA;QACA;;QAEA;QACA,sDAAsD,+DAA+D;;QAErH;QACA;;;QAGA;QACA;;;;;;;;;;;;;AClFa;AACb;AACA,4CAA4C;AAC5C;AACA,8CAA8C,cAAc;AAC5D,6BAA6B,mBAAO,CAAC,kBAAM;AAC3C,8CAA8C,mBAAO,CAAC,oDAAuB;AAC7E;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,8DAA8D,uBAAuB;AACrF;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;;;;;;;;;;;;AC1Ba;AACb,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACjBa;AACb;AACA,2BAA2B,+DAA+D,gBAAgB,EAAE,EAAE;AAC9G;AACA,mCAAmC,MAAM,6BAA6B,EAAE,YAAY,WAAW,EAAE;AACjG,kCAAkC,MAAM,iCAAiC,EAAE,YAAY,WAAW,EAAE;AACpG,+BAA+B,qFAAqF;AACpH;AACA,KAAK;AACL;AACA;AACA,aAAa,6BAA6B,0BAA0B,aAAa,EAAE,qBAAqB;AACxG,gBAAgB,qDAAqD,oEAAoE,aAAa,EAAE;AACxJ,sBAAsB,sBAAsB,qBAAqB,GAAG;AACpE;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC;AACvC,kCAAkC,SAAS;AAC3C,kCAAkC,WAAW,UAAU;AACvD,yCAAyC,cAAc;AACvD;AACA,6GAA6G,OAAO,UAAU;AAC9H,gFAAgF,iBAAiB,OAAO;AACxG,wDAAwD,gBAAgB,QAAQ,OAAO;AACvF,8CAA8C,gBAAgB,gBAAgB,OAAO;AACrF;AACA,iCAAiC;AACjC;AACA;AACA,SAAS,YAAY,aAAa,OAAO,EAAE,UAAU,WAAW;AAChE,mCAAmC,SAAS;AAC5C;AACA;AACA;AACA,4CAA4C;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D;AACA,6BAA6B,mBAAO,CAAC,kBAAM;AAC3C,8BAA8B,mBAAO,CAAC,0BAAU;AAChD,qCAAqC,mBAAO,CAAC,kCAAc;AAC3D,aAAa,mBAAO,CAAC,kCAAQ;AAC7B,8CAA8C,mBAAO,CAAC,oDAAuB;AAC7E,+BAA+B,mBAAO,CAAC,sCAAU;AACjD,cAAc,mBAAO,CAAC,oCAAS;AAC/B,eAAe,mBAAO,CAAC,sDAAkB;AACzC;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,mBAAO,CAAC,gDAAe;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb;AACA;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb;AACA;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,2CAA2C;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS,EAAE,EAAE;AACb;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,iGAAiG;AACjG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,CAAC,EAAE,EAAE;;;;;;;;;;;;;AC/OQ;AACb;AACA,2BAA2B,+DAA+D,gBAAgB,EAAE,EAAE;AAC9G;AACA,mCAAmC,MAAM,6BAA6B,EAAE,YAAY,WAAW,EAAE;AACjG,kCAAkC,MAAM,iCAAiC,EAAE,YAAY,WAAW,EAAE;AACpG,+BAA+B,qFAAqF;AACpH;AACA,KAAK;AACL;AACA;AACA,aAAa,6BAA6B,0BAA0B,aAAa,EAAE,qBAAqB;AACxG,gBAAgB,qDAAqD,oEAAoE,aAAa,EAAE;AACxJ,sBAAsB,sBAAsB,qBAAqB,GAAG;AACpE;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC;AACvC,kCAAkC,SAAS;AAC3C,kCAAkC,WAAW,UAAU;AACvD,yCAAyC,cAAc;AACvD;AACA,6GAA6G,OAAO,UAAU;AAC9H,gFAAgF,iBAAiB,OAAO;AACxG,wDAAwD,gBAAgB,QAAQ,OAAO;AACvF,8CAA8C,gBAAgB,gBAAgB,OAAO;AACrF;AACA,iCAAiC;AACjC;AACA;AACA,SAAS,YAAY,aAAa,OAAO,EAAE,UAAU,WAAW;AAChE,mCAAmC,SAAS;AAC5C;AACA;AACA;AACA,4CAA4C;AAC5C;AACA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA,8BAA8B,mBAAO,CAAC,oBAAO;AAC7C,mCAAmC,mBAAO,CAAC,8BAAY,GAAG;AAC1D,qCAAqC,mBAAO,CAAC,kCAAc;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2EAA2E,wCAAwC,EAAE;AACrH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,CAAC,EAAE;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wDAAwD;AACxD;AACA;AACA;AACA;AACA,2DAA2D,UAAU,UAAU,OAAO;AACtF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS,EAAE;AACX;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU,uBAAuB;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AC5Ta;AACb;AACA;AACA,gDAAgD,OAAO;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,+DAA+D,gBAAgB,EAAE,EAAE;AAC9G;AACA,mCAAmC,MAAM,6BAA6B,EAAE,YAAY,WAAW,EAAE;AACjG,kCAAkC,MAAM,iCAAiC,EAAE,YAAY,WAAW,EAAE;AACpG,+BAA+B,qFAAqF;AACpH;AACA,KAAK;AACL;AACA;AACA,aAAa,6BAA6B,0BAA0B,aAAa,EAAE,qBAAqB;AACxG,gBAAgB,qDAAqD,oEAAoE,aAAa,EAAE;AACxJ,sBAAsB,sBAAsB,qBAAqB,GAAG;AACpE;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC;AACvC,kCAAkC,SAAS;AAC3C,kCAAkC,WAAW,UAAU;AACvD,yCAAyC,cAAc;AACvD;AACA,6GAA6G,OAAO,UAAU;AAC9H,gFAAgF,iBAAiB,OAAO;AACxG,wDAAwD,gBAAgB,QAAQ,OAAO;AACvF,8CAA8C,gBAAgB,gBAAgB,OAAO;AACrF;AACA,iCAAiC;AACjC;AACA;AACA,SAAS,YAAY,aAAa,OAAO,EAAE,UAAU,WAAW;AAChE,mCAAmC,SAAS;AAC5C;AACA;AACA;AACA,4CAA4C;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D,qCAAqC,mBAAO,CAAC,kCAAc;AAC3D,qCAAqC,mBAAO,CAAC,0DAAgB,GAAG;AAChE,6BAA6B,mBAAO,CAAC,gDAAW,GAAG;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+CAA+C;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mDAAmD,SAAS,aAAa;AACzE,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,CAAC,EAAE;AACH,6CAA6C;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,CAAC,EAAE;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AC5Ha;AACb;AACA,2BAA2B,+DAA+D,gBAAgB,EAAE,EAAE;AAC9G;AACA,mCAAmC,MAAM,6BAA6B,EAAE,YAAY,WAAW,EAAE;AACjG,kCAAkC,MAAM,iCAAiC,EAAE,YAAY,WAAW,EAAE;AACpG,+BAA+B,qFAAqF;AACpH;AACA,KAAK;AACL;AACA;AACA,aAAa,6BAA6B,0BAA0B,aAAa,EAAE,qBAAqB;AACxG,gBAAgB,qDAAqD,oEAAoE,aAAa,EAAE;AACxJ,sBAAsB,sBAAsB,qBAAqB,GAAG;AACpE;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC;AACvC,kCAAkC,SAAS;AAC3C,kCAAkC,WAAW,UAAU;AACvD,yCAAyC,cAAc;AACvD;AACA,6GAA6G,OAAO,UAAU;AAC9H,gFAAgF,iBAAiB,OAAO;AACxG,wDAAwD,gBAAgB,QAAQ,OAAO;AACvF,8CAA8C,gBAAgB,gBAAgB,OAAO;AACrF;AACA,iCAAiC;AACjC;AACA;AACA,SAAS,YAAY,aAAa,OAAO,EAAE,UAAU,WAAW;AAChE,mCAAmC,SAAS;AAC5C;AACA;AACA;AACA,4CAA4C;AAC5C;AACA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA,8BAA8B,mBAAO,CAAC,oBAAO;AAC7C,mCAAmC,mBAAO,CAAC,8BAAY,GAAG;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kDAAkD;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS,EAAE;AACX;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC;AAChC;AACA;;;;;;;;;;;;;AC/Ia;AACb;AACA;AACA,gDAAgD,OAAO;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,+DAA+D,gBAAgB,EAAE,EAAE;AAC9G;AACA,mCAAmC,MAAM,6BAA6B,EAAE,YAAY,WAAW,EAAE;AACjG,kCAAkC,MAAM,iCAAiC,EAAE,YAAY,WAAW,EAAE;AACpG,+BAA+B,qFAAqF;AACpH;AACA,KAAK;AACL;AACA;AACA,aAAa,6BAA6B,0BAA0B,aAAa,EAAE,qBAAqB;AACxG,gBAAgB,qDAAqD,oEAAoE,aAAa,EAAE;AACxJ,sBAAsB,sBAAsB,qBAAqB,GAAG;AACpE;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC;AACvC,kCAAkC,SAAS;AAC3C,kCAAkC,WAAW,UAAU;AACvD,yCAAyC,cAAc;AACvD;AACA,6GAA6G,OAAO,UAAU;AAC9H,gFAAgF,iBAAiB,OAAO;AACxG,wDAAwD,gBAAgB,QAAQ,OAAO;AACvF,8CAA8C,gBAAgB,gBAAgB,OAAO;AACrF;AACA,iCAAiC;AACjC;AACA;AACA,SAAS,YAAY,aAAa,OAAO,EAAE,UAAU,WAAW;AAChE,mCAAmC,SAAS;AAC5C;AACA;AACA,8CAA8C,cAAc;AAC5D,aAAa,mBAAO,CAAC,kCAAQ;AAC7B,eAAe,mBAAO,CAAC,sDAAkB;AACzC,cAAc,mBAAO,CAAC,oCAAS;AAC/B,uCAAuC;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,CAAC,EAAE;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,aAAa,iBAAiB;AACjE,KAAK;AACL,iCAAiC,mCAAmC,EAAE;AACtE;AACA,mGAAmG,eAAe;AAClH;AACA;;;;;;;;;;;;;ACpGa;AACb;AACA,4CAA4C;AAC5C;AACA,8CAA8C,cAAc;AAC5D,2BAA2B,mBAAO,CAAC,cAAI;AACvC;AACA;AACA;AACA;AACA;AACA;AACA,+EAA+E;AAC/E,aAAa;AACb;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC,wCAAwC,kCAAkC,EAAE,EAAE;AAC/G;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB;AACvB,wBAAwB;AACxB,wBAAwB;AACxB,wBAAwB;AACxB,sBAAsB;AACtB,sBAAsB;AACtB,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA,sBAAsB;AACtB,sBAAsB;AACtB,wBAAwB;AACxB,wBAAwB;AACxB,wBAAwB;AACxB,uBAAuB;AACvB;;;;;;;;;;;;ACpDA,kC;;;;;;;;;;;ACAA,qC;;;;;;;;;;;ACAA,kD;;;;;;;;;;;ACAA,yC;;;;;;;;;;;ACAA,kD;;;;;;;;;;;ACAA,+B;;;;;;;;;;;ACAA,uC;;;;;;;;;;;ACAA,iC","file":"index.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/main/main.ts\");\n","\"use strict\";\r\nvar __importDefault = (this && this.__importDefault) || function (mod) {\r\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar path_1 = __importDefault(require(\"path\"));\r\nvar electron_json_storage_1 = __importDefault(require(\"electron-json-storage\"));\r\nvar Config = /** @class */ (function () {\r\n    function Config() {\r\n        this.getBoadList = function () {\r\n            electron_json_storage_1.default.get('boardList', function (error, data) {\r\n                var _a;\r\n                globalThis.electron.data.boardList = (_a = data.boardList) !== null && _a !== void 0 ? _a : [];\r\n            });\r\n        };\r\n        /** 板一覧を保存 */\r\n        this.saveBoardList = function (boardList) {\r\n            electron_json_storage_1.default.set('boardList', { boardList: boardList }, function (err) {\r\n                throw err;\r\n            });\r\n        };\r\n        // 設定ファイル読み込み\r\n        electron_json_storage_1.default.setDataPath(path_1.default.resolve(''));\r\n    }\r\n    return Config;\r\n}());\r\nexports.default = new Config();\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.electronEvent = {\r\n    /** サーバー起動 */\r\n    'start-server': 'start-server',\r\n    /** アラート表示 */\r\n    'show-alert': 'show-alert',\r\n    'show-comment': 'show-comment',\r\n    'clear-comment': 'clear-comment',\r\n    /** サーバー起動の返信 */\r\n    'start-server-reply': 'start-server-reply',\r\n    MAIN_GET_ELECTRON_DATA: 'MAIN_GET_ELECTRON_DATA',\r\n    MAIN_SET_ELECTRON_DATA: 'MAIN_SET_ELECTRON_DATA',\r\n    MAIN_ADD_BOARDLIST: 'MAIN_ADD_BOARDLIST',\r\n    MAIN_GET_THREAD_LIST: 'MAIN_GET_THREAD_LIST',\r\n    /** 板一覧表示 */\r\n    SHOW_BOARD_LIST: 'SHOW_BOARD_LIST',\r\n};\r\n","\"use strict\";\r\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nvar __generator = (this && this.__generator) || function (thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n};\r\nvar __importDefault = (this && this.__importDefault) || function (mod) {\r\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\r\n};\r\nvar __importStar = (this && this.__importStar) || function (mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result[\"default\"] = mod;\r\n    return result;\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n// Electronのモジュール\r\nvar path_1 = __importDefault(require(\"path\"));\r\nvar electron_1 = __importStar(require(\"electron\"));\r\nvar electron_log_1 = __importDefault(require(\"electron-log\"));\r\nvar util_1 = require(\"./util\");\r\nvar electron_window_state_1 = __importDefault(require(\"electron-window-state\"));\r\nvar config_1 = __importDefault(require(\"./config\"));\r\nvar const_1 = require(\"./const\");\r\nvar getRes_1 = require(\"./readBBS/getRes\");\r\nconsole.trace = function () {\r\n    //\r\n};\r\nprocess.on('uncaughtException', function (err) {\r\n    electron_log_1.default.error(err);\r\n});\r\n// アプリケーションをコントロールするモジュール\r\nvar app = electron_1.default.app;\r\n// 多重起動防止\r\nif (!app.requestSingleInstanceLock()) {\r\n    electron_log_1.default.error('[app] It is terminated for multiple launches.');\r\n    app.quit();\r\n}\r\nelectron_log_1.default.info('[app] started');\r\napp.allowRendererProcessReuse = true;\r\nvar iconPath = path_1.default.resolve(__dirname, '../icon.png');\r\n// サーバー起動モジュール\r\n// eslint-disable-next-line @typescript-eslint/no-var-requires\r\nvar ss = require('./startServer');\r\nconsole.trace(ss);\r\n// ウィンドウを作成するモジュール\r\nvar BrowserWindow = electron_1.default.BrowserWindow;\r\n// メインウィンドウはGCされないようにグローバル宣言\r\nglobalThis.electron = {\r\n    window: {\r\n        mainWindow: null,\r\n        chatWindow: null,\r\n    },\r\n    data: {\r\n        boardList: [],\r\n        board: null,\r\n        thread: null,\r\n    },\r\n};\r\n// 全てのウィンドウが閉じたら終了\r\napp.on('window-all-closed', function () {\r\n    // if (process.platform != 'darwin') {\r\n    app.quit();\r\n    // }\r\n});\r\n// Electronの初期化完了後に実行\r\napp.on('ready', function () {\r\n    var mainWindowState = electron_window_state_1.default({\r\n        defaultWidth: 700,\r\n        defaultHeight: 720,\r\n    });\r\n    // ウィンドウサイズを（フレームサイズを含まない）設定\r\n    var mainWin = new BrowserWindow({\r\n        // 前回起動時のを復元\r\n        x: mainWindowState.x,\r\n        y: mainWindowState.y,\r\n        width: mainWindowState.width,\r\n        height: mainWindowState.height,\r\n        useContentSize: true,\r\n        icon: iconPath,\r\n        webPreferences: {\r\n            nodeIntegration: true,\r\n        },\r\n        skipTaskbar: true,\r\n    });\r\n    globalThis.electron.window.mainWindow = mainWin;\r\n    mainWindowState.manage(mainWin);\r\n    mainWin.setTitle('vongole');\r\n    mainWin.setMenu(null);\r\n    // レンダラーで使用するhtmlファイルを指定する\r\n    mainWin.loadURL(path_1.default.resolve(__dirname, '../src/html/index.html'));\r\n    // ウィンドウが閉じられたらアプリも終了\r\n    mainWin.on('close', function (event) {\r\n        // 確認ダイアログではいをクリックしたら閉じる\r\n        event.preventDefault();\r\n        electron_1.dialog\r\n            .showMessageBox(mainWin, {\r\n            type: 'question',\r\n            buttons: ['Yes', 'No'],\r\n            // title: '',\r\n            message: '終了しますか？',\r\n        })\r\n            .then(function (value) {\r\n            if (value.response === 0) {\r\n                app.exit();\r\n            }\r\n        });\r\n    });\r\n    mainWin.on('closed', function () {\r\n        electron_log_1.default.info('[app] close');\r\n        app.exit();\r\n    });\r\n    // 開発者ツールを開く\r\n    mainWin.webContents.openDevTools();\r\n    // タスクトレイの設定\r\n    var tray = null;\r\n    app.whenReady().then(function () {\r\n        tray = new electron_1.Tray(iconPath);\r\n        var contextMenu = electron_1.Menu.buildFromTemplate([\r\n            {\r\n                label: '設定',\r\n                click: function () {\r\n                    mainWin.focus();\r\n                },\r\n            },\r\n            {\r\n                label: 'コメント',\r\n                click: function () {\r\n                    globalThis.electron.window.chatWindow.focus();\r\n                },\r\n            },\r\n            {\r\n                label: '終了',\r\n                click: function () {\r\n                    mainWin.close();\r\n                },\r\n            },\r\n        ]);\r\n        tray.setToolTip('∈(ﾟ◎ﾟ)∋ｳﾅｰ');\r\n        tray.setContextMenu(contextMenu);\r\n        // タスクトレイクリック時の挙動\r\n        var isDoubleClicked = false;\r\n        tray.on('click', function (event) { return __awaiter(void 0, void 0, void 0, function () {\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        isDoubleClicked = false;\r\n                        return [4 /*yield*/, util_1.sleep(200)];\r\n                    case 1:\r\n                        _a.sent();\r\n                        if (isDoubleClicked)\r\n                            return [2 /*return*/];\r\n                        globalThis.electron.window.chatWindow.focus();\r\n                        return [2 /*return*/];\r\n                }\r\n            });\r\n        }); });\r\n        tray.on('double-click', function (event) {\r\n            isDoubleClicked = true;\r\n            mainWin.focus();\r\n        });\r\n    });\r\n    // 板一覧初期表示\r\n    config_1.default.getBoadList();\r\n});\r\nvar createChatWindow = function () {\r\n    var chatWindow = new BrowserWindow({\r\n        width: 400,\r\n        useContentSize: true,\r\n        icon: iconPath,\r\n        webPreferences: {\r\n            nodeIntegration: true,\r\n        },\r\n        // タスクバーに表示しない\r\n        skipTaskbar: false,\r\n        closable: true,\r\n    });\r\n    chatWindow.setTitle('unacast');\r\n    chatWindow.setMenu(null);\r\n    // レンダラーで使用するhtmlファイルを指定する\r\n    chatWindow.loadURL(path_1.default.resolve(__dirname, '../src/html/chat.html'));\r\n    globalThis.electron.window.chatWindow = chatWindow;\r\n    // chatWindow.webContents.openDevTools();\r\n};\r\nelectron_1.ipcMain.handle(const_1.electronEvent.MAIN_GET_ELECTRON_DATA, function (event, message) {\r\n    return globalThis.electron.data;\r\n});\r\nelectron_1.ipcMain.handle(const_1.electronEvent.MAIN_SET_ELECTRON_DATA, function (event, message) {\r\n    globalThis.electron.data = message;\r\n    return;\r\n});\r\nelectron_1.ipcMain.handle(const_1.electronEvent.MAIN_ADD_BOARDLIST, function (event, message) {\r\n    var _a;\r\n    (_a = globalThis.electron.data.boardList).push.apply(_a, message);\r\n    config_1.default.saveBoardList(globalThis.electron.data.boardList);\r\n    return;\r\n});\r\nelectron_1.ipcMain.handle(const_1.electronEvent.MAIN_GET_THREAD_LIST, function (event, message) { return __awaiter(void 0, void 0, void 0, function () {\r\n    var list;\r\n    return __generator(this, function (_a) {\r\n        switch (_a.label) {\r\n            case 0: return [4 /*yield*/, getRes_1.getThreadList(message)];\r\n            case 1:\r\n                list = _a.sent();\r\n                return [2 /*return*/, list];\r\n        }\r\n    });\r\n}); });\r\n","\"use strict\";\r\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nvar __generator = (this && this.__generator) || function (thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n};\r\nvar __importDefault = (this && this.__importDefault) || function (mod) {\r\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n/**\r\n * 5ch互換BBS読み込み用モジュール\r\n */\r\nvar axios_1 = __importDefault(require(\"axios\"));\r\nvar iconv_lite_1 = __importDefault(require(\"iconv-lite\")); // 文字コード変換用パッケージ\r\nvar electron_log_1 = __importDefault(require(\"electron-log\"));\r\n/** ステータスコード304 _NotModified */\r\nvar NOT_MODIFIED = '304';\r\nvar RANGE_NOT_SATISFIABLE = '416';\r\n/** 最終取得スレッド */\r\nvar lastThreadUrl = '';\r\n/** 最終レス番号 */\r\nvar lastResNumber = 0;\r\n/** 最終更新日時 */\r\nvar lastModified = null;\r\n/** 最終バイト数 */\r\nvar lastByte = 0;\r\n/** スレ一覧を読み込む */\r\nexports.readBoard = function (boardUrl) { return __awaiter(void 0, void 0, void 0, function () {\r\n    var requestUrl, list, range, options, response, str, error_1;\r\n    return __generator(this, function (_a) {\r\n        switch (_a.label) {\r\n            case 0:\r\n                requestUrl = boardUrl + \"subject.txt\";\r\n                list = [];\r\n                range = lastByte;\r\n                options = {\r\n                    url: requestUrl,\r\n                    method: 'GET',\r\n                    timeout: 3 * 1000,\r\n                    responseType: 'arraybuffer',\r\n                    headers: {\r\n                        'if-modified-since': lastModified,\r\n                        range: 'bytes=' + range + '-',\r\n                    },\r\n                };\r\n                _a.label = 1;\r\n            case 1:\r\n                _a.trys.push([1, 3, , 4]);\r\n                return [4 /*yield*/, axios_1.default(options)];\r\n            case 2:\r\n                response = _a.sent();\r\n                str = iconv_lite_1.default.decode(Buffer.from(response.data), 'Shift_JIS');\r\n                // パースして格納\r\n                list.push.apply(list, str.split('\\n').map(function (line) { return parseThreadList(boardUrl, line); }));\r\n                return [3 /*break*/, 4];\r\n            case 3:\r\n                error_1 = _a.sent();\r\n                if (error_1.status == NOT_MODIFIED) {\r\n                    electron_log_1.default.error('[Read5ch.js]5ch系BBS板取得APIリクエストエラー、NOT_MODIFIED');\r\n                }\r\n                else if (error_1.status == RANGE_NOT_SATISFIABLE) {\r\n                    electron_log_1.default.error('[Read5ch.js]5ch系BBS板取得APIリクエストエラー、RANGE_NOT_SATISFIABLE');\r\n                }\r\n                else {\r\n                    electron_log_1.default.error('[Read5ch.js]5ch系BBS板取得APIリクエストエラー、message=' + error_1.message);\r\n                }\r\n                throw new Error('connection error');\r\n            case 4: return [2 /*return*/, list];\r\n        }\r\n    });\r\n}); };\r\nvar Read5ch = /** @class */ (function () {\r\n    function Read5ch() {\r\n        var _this = this;\r\n        /**\r\n         * レス読み込み\r\n         * 引数で指定した板からレスを読む\r\n         * レス番号を指定していない場合は最新1件取得\r\n         * @param threadUrl スレURL\r\n         * @param resNum レス番号\r\n         */\r\n        this.readThread = function (threadUrl, resNum) { return __awaiter(_this, void 0, void 0, function () {\r\n            var rep, requestUrl, range, options, responseJson, response, headers, str, error_2;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        // log.info(`[Read5ch] threadUrl=${threadUrl} resNum=${resNum}`);\r\n                        // 板や最終日レス番号がかわったら最初からとり直す(lastmodifiと rangeのリセット)\r\n                        if (threadUrl != lastThreadUrl || Number.isNaN(resNum) || resNum < lastResNumber) {\r\n                            lastThreadUrl = threadUrl;\r\n                            lastModified = null;\r\n                            lastByte = 0;\r\n                            console.trace('[Read5ch.js]resete!!!!!!!!!!!!!!!!');\r\n                        }\r\n                        else {\r\n                            console.trace('noresete');\r\n                        }\r\n                        rep = /\\/test\\/read.cgi(\\/.+)(\\/.+)\\//;\r\n                        requestUrl = threadUrl.replace(rep, '$1/dat$2.dat');\r\n                        range = lastByte;\r\n                        options = {\r\n                            url: requestUrl,\r\n                            method: 'GET',\r\n                            timeout: 3 * 1000,\r\n                            responseType: 'arraybuffer',\r\n                            headers: {\r\n                                'if-modified-since': lastModified,\r\n                                range: 'bytes=' + range + '-',\r\n                            },\r\n                        };\r\n                        _a.label = 1;\r\n                    case 1:\r\n                        _a.trys.push([1, 3, , 4]);\r\n                        return [4 /*yield*/, axios_1.default(options)];\r\n                    case 2:\r\n                        response = _a.sent();\r\n                        headers = response.headers;\r\n                        // LastModifiedとRange更新処理\r\n                        if (headers['last-modified'] != null) {\r\n                            lastModified = headers['last-modified'];\r\n                        }\r\n                        str = iconv_lite_1.default.decode(Buffer.from(response.data), 'Shift_JIS');\r\n                        // レスポンスオブジェクト作成、content-rangeがある場合とない場合で処理を分ける\r\n                        if (headers['content-range'] == null || lastByte == 0) {\r\n                            console.trace('[Read5ch.read]content-range=' + headers['content-range']);\r\n                            responseJson = purseNewResponse(str, resNum);\r\n                        }\r\n                        else {\r\n                            responseJson = purseDiffResponse(str, resNum);\r\n                        }\r\n                        // 取得バイト数表示\r\n                        if (headers['content-length'] != null && responseJson.length > 0) {\r\n                            lastByte = lastByte + parseInt(headers['content-length']) - 1;\r\n                            console.trace('[Read5ch.read]lastByte=' + lastByte);\r\n                        }\r\n                        return [3 /*break*/, 4];\r\n                    case 3:\r\n                        error_2 = _a.sent();\r\n                        responseJson = [];\r\n                        if (error_2.status == NOT_MODIFIED) {\r\n                            electron_log_1.default.error('[Read5ch.js]5ch系BBSレス取得APIリクエストエラー、NOT_MODIFIED');\r\n                        }\r\n                        else if (error_2.status == RANGE_NOT_SATISFIABLE) {\r\n                            electron_log_1.default.error('[Read5ch.js]5ch系BBSレス取得APIリクエストエラー、RANGE_NOT_SATISFIABLE');\r\n                        }\r\n                        else {\r\n                            electron_log_1.default.error('[Read5ch.js]5ch系BBSレス取得APIリクエストエラー、message=' + error_2.message);\r\n                        }\r\n                        throw new Error('connection error');\r\n                    case 4: return [2 /*return*/, responseJson];\r\n                }\r\n            });\r\n        }); };\r\n    }\r\n    return Read5ch;\r\n}());\r\n/**\r\n * 取得したレスポンス（複数）のパース\r\n * 戻りとしてパースしたjsonオブジェクトの配列を返す\r\n * @param res 板から返却されたdat\r\n * @param resNum リクエストされたレス番号\r\n */\r\nvar purseNewResponse = function (res, resNum) {\r\n    // 結果を格納する配列\r\n    var result = [];\r\n    // レス番号\r\n    var num = 0;\r\n    // 新着レスを改行ごとにSplitする\r\n    var resArray = res.split(/\\r\\n|\\r|\\n/);\r\n    // 新着なしなら戻る。\r\n    if (resArray.length === 0) {\r\n        return result;\r\n    }\r\n    // 配列の最後に空の要素が入ることがあるので取り除く\r\n    if (resArray[resArray.length - 1].length === 0) {\r\n        resArray.pop();\r\n    }\r\n    // レス指定なしの場合最後の1件取得\r\n    if (Number.isNaN(resNum)) {\r\n        num = resArray.length - 1;\r\n    }\r\n    else {\r\n        num = resNum - 1;\r\n    }\r\n    // 1行ごとにパースする\r\n    for (; num < resArray.length; num++) {\r\n        // パースメソッド呼び出し\r\n        if (resArray[num].length > 0) {\r\n            result.push(parseResponse(resArray[num], num + 1));\r\n        }\r\n    }\r\n    lastResNumber = num + 1;\r\n    // パースしたオブジェクトの配列を返却\r\n    return result;\r\n};\r\n/**\r\n * 取得したレスポンス（複数）のパース\r\n * 戻りとしてパースしたjsonオブジェクトの配列を返す\r\n * @param res 板から返却されたdat1行分\r\n * @param resNum リクエストされたレス番号\r\n */\r\nvar purseDiffResponse = function (res, resNum) {\r\n    //結果を格納する配列\r\n    var result = [];\r\n    // レス番号\r\n    var num = resNum;\r\n    //新着レスを改行ごとにSplitする\r\n    var resArray = res.split(/\\r\\n|\\r|\\n/);\r\n    // 新着なしなら戻る。\r\n    if (resArray.length === 0) {\r\n        return result;\r\n    }\r\n    else {\r\n        // 配列の最後に空の要素が入ることがあるので取り除く\r\n        if (resArray[resArray.length - 1].length == 0) {\r\n            resArray.pop();\r\n        }\r\n    }\r\n    console.trace('[Read5ch.purseDiffResponse]取得レス番号=' + num);\r\n    //1行ごとにパースする\r\n    resArray.forEach(function (value) {\r\n        //パースメソッド呼び出し\r\n        if (value.length > 0) {\r\n            result.push(parseResponse(value, num));\r\n            num++;\r\n        }\r\n    });\r\n    // パースしたオブジェクトの配列を返却\r\n    return result;\r\n};\r\n/**\r\n * スレ一覧のパース\r\n * @param String // res レスポンス1レス\r\n * @param Integer // num レス番（0スタート）\r\n */\r\nvar parseThreadList = function (boardUrl, subjectLine) {\r\n    var _a, _b, _c;\r\n    //APIの返却値を<>で分割\r\n    //レスの要素\r\n    //0:dat名\r\n    //1:スレタイ（レス数）\r\n    var splitRes = subjectLine.split('<>');\r\n    var dat = splitRes[0];\r\n    var titleTemp = splitRes[1];\r\n    var name = (_b = (_a = titleTemp.match(/(.*?) \\(\\d+\\)$/)) === null || _a === void 0 ? void 0 : _a[1]) !== null && _b !== void 0 ? _b : '★取得失敗★';\r\n    var resNum = Number((_c = titleTemp.match(/\\(\\d+\\)$/)) === null || _c === void 0 ? void 0 : _c[0].replace(/\\(|\\)/g, ''));\r\n    // オブジェクトを返却\r\n    return {\r\n        url: boardUrl + \"/dat\",\r\n        name: name,\r\n        resNum: resNum,\r\n    };\r\n};\r\n/**\r\n * レスのパース\r\n * @param String // res レスポンス1レス\r\n * @param Integer // num レス番（0スタート）\r\n */\r\nvar parseResponse = function (res, num) {\r\n    //APIの返却値を<>で分割\r\n    //レスの要素\r\n    //0:名前\r\n    //1:メアド\r\n    //2:日付とID （2019/11/03(日) 08:55:00 ID:kanikani）みたいに表示\r\n    //3:本文\r\n    //4:スレタイ （1レス目のみ）\r\n    var splitRes = res.split('<>');\r\n    // 日付とID分離処理、' ID:'で区切る\r\n    var dateId = splitRes[2].split(' ID:');\r\n    var date = dateId[0];\r\n    var id = dateId.length === 2 ? dateId[1] : '';\r\n    var resJson = {\r\n        number: num,\r\n        name: splitRes[0],\r\n        email: splitRes[1],\r\n        date: date,\r\n        text: splitRes[3],\r\n        // threadTitle: splitRes[4],\r\n        id: id,\r\n        imgUrl: '',\r\n    };\r\n    // オブジェクトを返却\r\n    return resJson;\r\n};\r\nexports.default = Read5ch;\r\n","\"use strict\";\r\nvar __assign = (this && this.__assign) || function () {\r\n    __assign = Object.assign || function(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\r\n                t[p] = s[p];\r\n        }\r\n        return t;\r\n    };\r\n    return __assign.apply(this, arguments);\r\n};\r\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nvar __generator = (this && this.__generator) || function (thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n};\r\nvar __importDefault = (this && this.__importDefault) || function (mod) {\r\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\r\n};\r\nvar __importStar = (this && this.__importStar) || function (mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result[\"default\"] = mod;\r\n    return result;\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar electron_log_1 = __importDefault(require(\"electron-log\"));\r\nvar readSitaraba_1 = __importDefault(require(\"./readSitaraba\")); // したらば読み込み用モジュール\r\nvar Read5ch_1 = __importStar(require(\"./Read5ch\")); // 5ch互換板読み込み用モジュール\r\nvar sitaraba = new readSitaraba_1.default();\r\nvar read5ch = new Read5ch_1.default();\r\n// 掲示板読み込みモジュール、一度決定したら使いまわすためにグローバル宣言\r\nvar bbsModule = null;\r\n/**\r\n * 掲示板のレスを取得する\r\n * @param threadUrl スレのURL\r\n * @param resNum この番号以降を取得する。指定しない場合は最新1件を取得。\r\n */\r\nexports.getRes = function (threadUrl, resNum) { return __awaiter(void 0, void 0, void 0, function () {\r\n    var response, e_1;\r\n    return __generator(this, function (_a) {\r\n        switch (_a.label) {\r\n            case 0:\r\n                _a.trys.push([0, 2, , 3]);\r\n                // リクエストURLを解析し、使用するモジュールを変更する\r\n                bbsModule = analysBBSName(threadUrl);\r\n                return [4 /*yield*/, bbsModule.read(threadUrl, resNum)];\r\n            case 1:\r\n                response = _a.sent();\r\n                console.log(\"[getRes.js] fetch \" + threadUrl + \" resNum = \" + resNum + \", result = \" + response.length);\r\n                return [2 /*return*/, response.map(function (res) {\r\n                        return __assign(__assign({}, res), { imgUrl: '' });\r\n                    })];\r\n            case 2:\r\n                e_1 = _a.sent();\r\n                electron_log_1.default.error(e_1);\r\n                return [2 /*return*/, []];\r\n            case 3: return [2 /*return*/];\r\n        }\r\n    });\r\n}); };\r\nexports.getThreadList = function (boardUrl) { return __awaiter(void 0, void 0, void 0, function () {\r\n    var sitarabaDomain;\r\n    return __generator(this, function (_a) {\r\n        switch (_a.label) {\r\n            case 0:\r\n                sitarabaDomain = 'jbbs.shitaraba.net';\r\n                if (!(boardUrl.indexOf(sitarabaDomain) !== -1)) return [3 /*break*/, 1];\r\n                // URLにしたらばドメイン名が入ってればしたらば\r\n                //\r\n                return [2 /*return*/, []];\r\n            case 1: return [4 /*yield*/, Read5ch_1.readBoard(boardUrl)];\r\n            case 2: return [2 /*return*/, _a.sent()];\r\n        }\r\n    });\r\n}); };\r\n/*\r\n * URLをみてどこのBBSか判定して使用するモジュールを返却する\r\n */\r\nvar analysBBSName = function (threadUrl) {\r\n    // したらばドメイン名\r\n    var sitarabaDomain = 'jbbs.shitaraba.net';\r\n    // こんな感じで必要に応じて増やしていけばいいんじゃね？\r\n    // const dokkanoBBS = 'dokka.bbs.com';\r\n    if (threadUrl.indexOf(sitarabaDomain) !== -1) {\r\n        // URLにしたらばドメイン名が入ってればしたらば\r\n        return sitaraba;\r\n    }\r\n    // どこにも該当しなかったらとりあえず5chで\r\n    // この辺も対応ドメインリストとか作ってちゃんと判定したほうがよさそう\r\n    return read5ch;\r\n};\r\n","\"use strict\";\r\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nvar __generator = (this && this.__generator) || function (thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n};\r\nvar __importDefault = (this && this.__importDefault) || function (mod) {\r\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n/**\r\n * したらば読み込み用モジュール\r\n */\r\nvar axios_1 = __importDefault(require(\"axios\"));\r\nvar iconv_lite_1 = __importDefault(require(\"iconv-lite\")); // 文字コード変換用パッケージ\r\n/**\r\n * コンストラクタ\r\n */\r\nvar ReadSitaraba = /** @class */ (function () {\r\n    function ReadSitaraba() {\r\n        // constructor() {}\r\n        var _this = this;\r\n        /**\r\n         * レス読み込み\r\n         * @description 引数で指定した板からレスを読む。\r\n         * @description レス番号を指定していない場合は最新1件取得\r\n         * @param threadUrl スレURL\r\n         * @param resNum レス番号\r\n         */\r\n        this.read = function (threadUrl, resNum) { return __awaiter(_this, void 0, void 0, function () {\r\n            var requestUrl, options, response, str, responseJson;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        requestUrl = threadUrl.replace('read.cgi', 'rawmode.cgi');\r\n                        if (resNum > 0) {\r\n                            // レス番号がある場合レス番号以降を取得\r\n                            requestUrl += resNum + '-';\r\n                        }\r\n                        else {\r\n                            // レス番号がない場合最新の1件取得\r\n                            requestUrl += 'l1';\r\n                        }\r\n                        options = {\r\n                            url: requestUrl,\r\n                            method: 'GET',\r\n                            responseType: 'arraybuffer',\r\n                            timeout: 3 * 1000,\r\n                        };\r\n                        return [4 /*yield*/, axios_1.default(options)];\r\n                    case 1:\r\n                        response = _a.sent();\r\n                        str = decodeUnicodeStr(iconv_lite_1.default.decode(Buffer.from(response.data), 'EUC-JP'));\r\n                        responseJson = purseNewResponse(str);\r\n                        return [2 /*return*/, responseJson];\r\n                }\r\n            });\r\n        }); };\r\n    }\r\n    return ReadSitaraba;\r\n}());\r\n/**\r\n * 取得したレスポンス（複数）のパース\r\n * @param res\r\n */\r\nvar purseNewResponse = function (res) {\r\n    //結果を格納する配列\r\n    var result = [];\r\n    // 新着レスを改行ごとにSplitする\r\n    var resArray = res.split(/\\r\\n|\\r|\\n/);\r\n    // 1行ごとにパースする\r\n    resArray.forEach(function (value) {\r\n        // パースメソッド呼び出し\r\n        if (value.length > 0) {\r\n            result.push(purseResponse(value));\r\n        }\r\n    });\r\n    return result;\r\n};\r\n/**\r\n * レスポンスのパース\r\n * Jsonオブジェクトを返却する\r\n * @param String // res レスポンス1レス\r\n */\r\nvar purseResponse = function (res) {\r\n    //APIの返却値を<>で分割\r\n    //レスの要素\r\n    //0:レス番号\r\n    //1:名前\r\n    //2:メアド\r\n    //3:日付\r\n    //4:本文\r\n    //5:スレタイ\r\n    //6:ID\r\n    var splitRes = res.split('<>');\r\n    var resJson = {\r\n        number: Number(splitRes[0]),\r\n        name: splitRes[1],\r\n        email: splitRes[2],\r\n        date: splitRes[3],\r\n        text: splitRes[4],\r\n        // threadTitle: splitRes[5],\r\n        id: splitRes[6],\r\n        imgUrl: '',\r\n    };\r\n    // オブジェクトを返却\r\n    return resJson;\r\n};\r\n/** したらばだけは全角ダッシュがUnicode文字列として格納されるので変換する */\r\nvar decodeUnicodeStr = function (str) {\r\n    return str.replace(/&#65374;/g, '～');\r\n};\r\nexports.default = ReadSitaraba;\r\n","\"use strict\";\r\nvar __assign = (this && this.__assign) || function () {\r\n    __assign = Object.assign || function(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\r\n                t[p] = s[p];\r\n        }\r\n        return t;\r\n    };\r\n    return __assign.apply(this, arguments);\r\n};\r\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nvar __generator = (this && this.__generator) || function (thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar util_1 = require(\"./util\");\r\nvar getRes_1 = require(\"./readBBS/getRes\");\r\nvar const_1 = require(\"./const\");\r\nvar getResInterval = function (exeId) { return __awaiter(void 0, void 0, void 0, function () {\r\n    var resNum, result;\r\n    var _a, _b;\r\n    return __generator(this, function (_c) {\r\n        switch (_c.label) {\r\n            case 0:\r\n                resNum = (_b = (_a = globalThis.electron.data.thread.list[globalThis.electron.data.thread.list.length - 1]) === null || _a === void 0 ? void 0 : _a.number) !== null && _b !== void 0 ? _b : 0;\r\n                return [4 /*yield*/, getRes_1.getRes(globalThis.electron.data.thread.url, resNum)];\r\n            case 1:\r\n                result = _c.sent();\r\n                // 指定したレス番は除外対象\r\n                if (resNum)\r\n                    result.shift();\r\n                if (result.length > 0 && result[result.length - 1].number) {\r\n                    sendDomForChatWindow(result);\r\n                }\r\n                return [4 /*yield*/, util_1.sleep(5000)];\r\n            case 2:\r\n                _c.sent();\r\n                getResInterval(exeId);\r\n                return [2 /*return*/];\r\n        }\r\n    });\r\n}); };\r\nexports.createDom = function (message) {\r\n    var domStr = \"<li class=\\\"list-item\\\">\";\r\n    domStr += \"<div class=\\\"content\\\">\";\r\n    // レス番表示\r\n    domStr += \"\\n      <span class=\\\"resNumber\\\">\" + message.number + \"</span>\\n    \";\r\n    // 名前表示\r\n    domStr += \"<span class=\\\"name\\\">\" + message.name + \"</span>\";\r\n    // 時刻表示\r\n    domStr += \"<span class=\\\"date\\\">\" + message.date + \"</span>\";\r\n    domStr += \"\\n    <span class=\\\"res\\\">\\n      \" + message.text\r\n        .replace(/<a .*?>/g, '') // したらばはアンカーをaタグ化している\r\n        .replace(/<\\\\a>/g, '') + \"\\n    </span>\\n    </div>\\n  </li>\";\r\n    return domStr;\r\n};\r\nvar sendDomForChatWindow = function (messageList) {\r\n    var domStr2 = messageList\r\n        .map(function (message) {\r\n        var imgUrl = message.imgUrl && message.imgUrl.match(/^\\./) ? '../../public/' + message.imgUrl : message.imgUrl;\r\n        return __assign(__assign({}, message), { imgUrl: imgUrl });\r\n    })\r\n        .map(function (message) { return exports.createDom(message); })\r\n        .join('\\n');\r\n    globalThis.electron.window.chatWindow.webContents.send(const_1.electronEvent['show-comment'], { dom: domStr2 });\r\n};\r\nexports.default = {};\r\n","\"use strict\";\r\nvar __importDefault = (this && this.__importDefault) || function (mod) {\r\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar fs_1 = __importDefault(require(\"fs\"));\r\nexports.readWavFiles = function (path) {\r\n    return new Promise(function (resolve, reject) {\r\n        fs_1.default.readdir(path, function (err, files) {\r\n            if (err)\r\n                reject(err);\r\n            var fileList = files.filter(function (file) {\r\n                return isExistFile(path + '/' + file) && /.*\\.wav$/.test(file); //絞り込み\r\n            });\r\n            resolve(fileList);\r\n        });\r\n    });\r\n};\r\nvar isExistFile = function (file) {\r\n    try {\r\n        fs_1.default.statSync(file).isFile();\r\n        return true;\r\n    }\r\n    catch (err) {\r\n        if (err.code === 'ENOENT')\r\n            return false;\r\n    }\r\n};\r\nexports.sleep = function (msec) { return new Promise(function (resolve) { return setTimeout(resolve, msec); }); };\r\nexports.escapeHtml = function (string) {\r\n    if (typeof string !== 'string') {\r\n        return string;\r\n    }\r\n    return string.replace(/[&'`\"<>]/g, function (match) {\r\n        return {\r\n            '&': '&amp;',\r\n            \"'\": '&#x27;',\r\n            '`': '&#x60;',\r\n            '\"': '&quot;',\r\n            '<': '&lt;',\r\n            '>': '&gt;',\r\n        }[match];\r\n    });\r\n};\r\nexports.unescapeHtml = function (str) {\r\n    return str\r\n        .replace(/&lt;/g, '<')\r\n        .replace(/&gt;/g, '>')\r\n        .replace(/&quot;/g, '\"')\r\n        .replace(/&#039;/g, \"'\")\r\n        .replace(/&#044;/g, ',')\r\n        .replace(/&amp;/g, '&');\r\n};\r\n","module.exports = require(\"axios\");","module.exports = require(\"electron\");","module.exports = require(\"electron-json-storage\");","module.exports = require(\"electron-log\");","module.exports = require(\"electron-window-state\");","module.exports = require(\"fs\");","module.exports = require(\"iconv-lite\");","module.exports = require(\"path\");"],"sourceRoot":""}